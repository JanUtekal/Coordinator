import QtQuick 1.1

import QtMobility.location 1.2

Rectangle {
   id: pinchmap

   property double defaultLatitude: 49.45
   property double defaultLongitude: 15.30
   property int  defaultZoomLevel: 7

   property alias mapType: map.mapType

   width: 640
   height: 350

   Map {
      id: map
      connectivityMode: Map.OfflineMode
      anchors.fill: parent
      zoomLevel: pinchmap.defaultZoomLevel
      plugin: Plugin { name: "nokia" }
      mapType: Map.StreetMap

      center: Coordinate {
         latitude: pinchmap.defaultLatitude
         longitude: pinchmap.defaultLongitude
      }
   }

   PinchArea {
      id: pincharea

      property double __oldZoom

      anchors.fill: parent

      function calcZoomDelta(zoom, percent) {
          console.log(percent,Math.log(percent)/Math.log(2));
         return zoom + Math.log(percent)/Math.log(2)
      }

      onPinchStarted: {
         __oldZoom = map.zoomLevel
      }

      onPinchUpdated: {
         map.zoomLevel = calcZoomDelta(__oldZoom, pinch.scale)
      }

      onPinchFinished: {
         map.zoomLevel = calcZoomDelta(__oldZoom, pinch.scale)
      }
   }

   MouseArea {
      id: mousearea

      property bool __isPanning: false
      property int __lastX: -1
      property int __lastY: -1

      anchors.fill : parent

      onPressed: {
         __isPanning = true
         __lastX = mouse.x
         __lastY = mouse.y
      }

      onReleased: {
         __isPanning = false
      }

      onPositionChanged: {
         if (__isPanning) {
            var dx = mouse.x - __lastX
            var dy = mouse.y - __lastY
            map.pan(-dx, -dy)
            __lastX = mouse.x
            __lastY = mouse.y
         }
      }

      onCanceled: {
         __isPanning = false;
      }
   }
}
